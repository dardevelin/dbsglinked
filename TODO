# TODO LIST
-------------- changes made in version 0.0.18
DONE: - fix libglinked_foreach_node
      make it fail if action is NULL
      update documentation of the function
--------------

-------------- changes made in version 0.0.13 + 0.0.14 + 0.0.15 + 0.0.16 + 0.0.17
DONE: - add split function
      - update main.c to sample case split_list function
      - update README to document split_list function
DONE: - fix libglinked_remove_node make it reduce item count
DONE: - fix glinked_list.h function prototypes
      of ↓
DONE: - fix libglinked_remove_node return type
      - update readme to match return type
DONE: - fix libglinked_find_node return type
      - update readme to match return type
--------------

-------------- changes made in version 0.0.12
DONE: - add remove_node function
      - update main.c to present a sample of 
      - update README to document remove_node
      function;
--------------

-------------- changes made in version 0.0.11
DONE: - add find function
      - update main.c to present a sample of
      find_node and all respective auxiliar functions
      - update README to document find_node function
--------------
-------------- changes made in version 0.0.10
DONE - add function like foreach over the list
     - update main.c to present better sample
     now more documented
--------------

--------------- changes made in version 0.0.9
DONE - add lifo functions, push and pop operations
     - update main.c to present a better sample
---------------

--------------- changes made in version 0.0.8
DONE: - change libglinked_push_node and libglinked_pop_node names
        to libglinked_enqueue_node and libglinked_dequeue_node
	to better match FIFO(first in, first out) terminology
---------------

--------------- changes made in version 0.0.5 + 0.0.6 + 0.0.7
DONE:- Add to libglinked_list_t function pointer for an allocator and a deallocator
  this should make easy to integrate the list into projects that
  use a custom (de)allocator. these functions will be used to create and delete 
  libglinked_node_t structures
DONE↓:- add function to set libglinked_list_t function pointers. //changed to
    →- modify libglinked_init_list to receive a (de)allocator
DONE:- update libglinked_create_node to receive the list since the list contains
  the allocator and deallocator of the node structure
DONE: - update libglinked_delete_node and libglinked_delete_list to use the list as means
  to use the correct node structures deallocators of that list
---------------

-------------- changes made in version 0.0.4
DONE: - update node structure to contain the data deallocator
DONE: - update libglinked_create_node to receive a data deallocator
        null is used to identify that doesn't require deallocation
DONE: - update libglinked_delete_node and libglinked_delete_list
        to not require a deallocator for data
---------------

--------------- changes made in version 0.0.3
DONE: - modify libglinked_create_node to not allocate or copy data to node->data.
  the function will just simply point node->data to the data passed by the user,
  this way is up to the user to handle the data.
---------------

--------------- added in version 0.0.2
DONE: - Modify libglinked_delete_node and libglinked_delete_list to use a 
  user define function to delete the node data 
---------------

- add join function

- possibly add fast append capabilities

- Try make deb package for debian

- See if the code needs more comments
  
- Implement search and friends, 

{
- maybe add an Identifier to the items, this way a user could define types and use the list
  as a really generic type one.
 
- if the previous mentioned features gets in, 
	* implement sort, by key/identifier/type
	* implement remove function for specific elements
        * insert elements according to key/id/type rules
        * ways to define rules
}

